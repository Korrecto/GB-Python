# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
# элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.

test_list = ['a', 'b', 25, 0.354, False, {'имя': 'John'}]
for t in test_list:
    print(t, type(t))

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0
# и 1, # 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте. Для заполнения списка
# элементов # необходимо использовать функцию input().

text = list(input('Введите список:'))
for t in range(0, len(text)//2*2, 2):
    text[t], text[t+1] = text[t+1], text[t]
print(text)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц (зима,
# весна, лето, осень). Напишите решения через list и через dict.

#dict

data = int(input('Введите номер месяца:'))
dict_mount = {1: 'Зима', 2: 'Зима', 3: 'Весна', 4: 'Весна', 5: 'Весна', 6: 'Лето', 7: 'Лето', 8: 'Лето', 9: 'Осень',
              10: 'Осень', 11: 'Осень', 12: 'Зима'}
if data in dict_mount:
    print('Ответ:', dict_mount[data])
else:
    print('ERROR некорретные данные')

#list

data = int(input('Введите номер месяца:'))
list_mount = ['Зима', 'Зима', 'Весна', 'Весна', 'Весна', 'Лето', 'Лето', 'Лето', 'Осень', 'Осень',  'Осень',  'Зима']
if data >=0 and data <=12:
    print('Ответ:', list_mount[data-1])
else:
    print('ERROR некорретные данные')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

data = input('Введите предложение:')
mod_data = data.split(' ')
counter = 1
for m in mod_data:
    print(counter, m[0:10])
    counter += 1

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя
# необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них. Подсказка. Например, набор натуральных чисел: 7,
# 5, 3, 3, 2. Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2. Пользователь ввел число 8. Результат: 8, 7, 5,
# 3, 3, 2. Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1. Набор натуральных чисел можно задать
# непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

rating = [7, 5, 3, 3, 2]

data = input('Введите число:')

if data in rating:
    rating.insert(rating.index(data), data)
elif data > max(rating):
    rating.insert(0, data)
elif data < max(rating) and data > min(rating):
    rating.insert(rating.index(data - 1), data)
else:
    rating.append(data)
print(rating)

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
# информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами (
# характеристиками товара: название, цена, количество, единица измерения). Структуру нужно сформировать программно,
# т.е. запрашивать все данные у пользователя. Пример готовой структуры:
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”}) ]
# Необходимо собрать
# аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров. Пример:
# { “название”:
# [“компьютер”,
# “принтер”, “сканер”], “цена”: [20000, 6000, 2000], “количество”: [5, 2, 7], “ед”: [“шт.”] }

product = []
id = 1
while True:
    name = input('Введите наименование товара')
    price = input('Введите стоимость товара')
    kol = input('Введите количество товара')
    ed = input('Введите единицу измерения')
    temp = (id, {'название': name, 'цена': price, 'количество': kol, 'ед': ed})
    product.append(temp)
    if input('Добавить еще товар (y/n): ') == 'n':
        break
    id += 1
name = []
price = []
kol = []
ed = []
for ll in product:
    name.append(ll[1]['название'])
    price.append(ll[1]['цена'])
    kol.append(ll[1]['количество'])
    ed.append(ll[1]['ед'])
output = {'название': name, 'цена': price, 'количество': kol, 'ед': ed}
print(output)
